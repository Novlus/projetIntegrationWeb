//@import 'variable.scss'; 

@mixin rowXs ()
{
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
} 


/*@mixin rowS ()
{
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    @media screen and (min-width: 551px)
    {
        display: initial;
        flex-direction: initial;
        flex-wrap: initial;
    }
} 

@mixin rowM ()
{
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    @media screen and (min-width: 751px)
    {
        display: initial;
        flex-direction: initial;
        flex-wrap: initial;
    }
} 

@mixin rowL ()
{
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    @media screen and (min-width: 991px)
    {
        display: initial;
        flex-direction: initial;
        flex-wrap: initial;
    }
} 

@mixin rowEl ()
{
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
}*/

@mixin grid()
{
    flex-grow: 0;
    flex-shrink: 0;
    justify-content: flex-start;

}

@mixin dimension($WidthNBColumns,$TotalNBColumns)
{
    $one-column-width: calc( (98% - 2 * ($BorderWidth) - ( ($TotalNBColumns - 1) * $gutter ) )/$TotalNBColumns );
    flex-basis: calc($one-column-width * $WidthNBColumns + $gutter * ($WidthNBColumns - 1));

}

@mixin offset($WidthNBColumns,$TotalNBColumns)
{
    $one-column-width: calc( (98% - 2 * ($BorderWidth) - ( ($TotalNBColumns - 1) * $gutter ) )/$TotalNBColumns );
    margin-left: calc($one-column-width * $WidthNBColumns + $gutter * ($WidthNBColumns));

}